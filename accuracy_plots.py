import matplotlib.pyplot as plt

# Example training metrics (replace these with your actual data)
epochs = list(range(1, 51))
precision = [0.707, 0.825, 0.748, 0.846, 0.963, 0.958, 0.98, 0.95, 0.972, 0.976, 0.99, 0.963, 0.988, 0.991, 0.991, 0.981, 0.956, 0.981, 0.979, 0.993, 0.981, 0.981, 0.99, 0.982, 0.978, 0.981, 0.982, 0.973, 0.969, 0.986, 0.982, 0.985, 0.99, 0.981, 0.982, 0.982, 0.986, 0.984, 0.99, 0.986, 0.986, 0.981, 0.965, 0.981, 0.982, 0.982, 0.977, 0.982, 0.976, 0.969]
recall = [0.642, 0.801, 0.805, 0.779, 0.924, 0.908, 0.925, 0.934, 0.908, 0.947, 0.938, 0.938, 0.929, 0.95, 0.956, 0.942, 0.972, 0.938, 0.969, 0.951, 0.969, 0.978, 0.947, 0.965, 0.971, 0.956, 0.971, 0.969, 0.987, 0.94, 0.973, 0.973, 0.951, 0.956, 0.973, 0.967, 0.956, 0.969, 0.951, 0.956, 0.959, 0.96, 0.96, 0.972, 0.969, 0.976, 0.96, 0.976, 0.982, 0.984]
map50 = [0.709, 0.882, 0.81, 0.846, 0.956, 0.939, 0.961, 0.968, 0.971, 0.979, 0.97, 0.974, 0.979, 0.981, 0.988, 0.976, 0.978, 0.969, 0.988, 0.991, 0.989, 0.99, 0.982, 0.99, 0.987, 0.987, 0.99, 0.985, 0.98, 0.986, 0.989, 0.986, 0.986, 0.989, 0.99, 0.991, 0.99, 0.99, 0.99, 0.991, 0.981, 0.988, 0.991, 0.99, 0.993, 0.992, 0.985, 0.992, 0.99, 0.989]
map50_95 = [0.375, 0.491, 0.427, 0.454, 0.59, 0.582, 0.624, 0.619, 0.65, 0.629, 0.651, 0.642, 0.635, 0.632, 0.675, 0.669, 0.64, 0.638, 0.668, 0.687, 0.678, 0.675, 0.693, 0.687, 0.674, 0.681, 0.689, 0.688, 0.683, 0.69, 0.684, 0.692, 0.688, 0.691, 0.693, 0.682, 0.706, 0.693, 0.71, 0.707, 0.688, 0.702, 0.711, 0.71, 0.709, 0.705, 0.704, 0.714, 0.713, 0.713]

# Create the plot
plt.figure(figsize=(10, 6))
plt.plot(epochs, precision, label='Precision', marker='o')
plt.plot(epochs, recall, label='Recall', marker='s')
plt.plot(epochs, map50, label='mAP@50', marker='^')
plt.plot(epochs, map50_95, label='mAP@50-95', marker='*')

# Add labels, title, and legend
plt.xlabel('Epochs')
plt.ylabel('Metric Value')
plt.title('Training Metrics Over Epochs')
plt.legend()
plt.grid()

# Save the plot
# Save the plot with tight bounding box
plt.savefig("training_metrics.png", bbox_inches='tight')

# Show the plot
plt.show()
